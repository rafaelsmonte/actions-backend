name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  REPO_NAME: rsmonte/actions-backend

jobs:
  test:
    name: Run Jest Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm ci
      - name: Run tests with coverage
        run: npm test -- --coverage
      - name: Extract Coverage Percentage
        run: |
          COVERAGE=$(grep -Po 'All files\s*\|\s*\K\d+\.\d+' coverage/lcov-report/index.html)
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
      - name: Create Coverage Badge
        run: |
          curl -o coverage-badge.svg "https://img.shields.io/badge/Coverage-${COVERAGE}%25-brightgreen"
      - name: Upload Coverage Badge
        uses: actions/upload-artifact@v3
        with:
          name: coverage-badge
          path: coverage-badge.svg
  sonar:
    name: Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  build:
    needs: sonar  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Login into Docker
      env: 
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - name: Build the Docker image
      run: docker build -t ${{env.REPO_NAME}}:latest .
    - name: Push to DockerHub
      run: docker push ${{env.REPO_NAME}}:latest
  deploy:
    runs-on: self-hosted
    needs: build  
    steps:
      - name: Login into Docker
        env: 
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Removing Old Docker Container
        run: sudo docker rm -f actions-backend-server || true 
      - name: Removing Old Docker Image
        run: sudo docker rmi ${{env.REPO_NAME}}:latest || true
      - name: Pulling Docker Image
        run: sudo docker pull ${{env.REPO_NAME}}:latest
      - name: Starting Docker Container
        run: sudo docker run -d -p 3000:3000 --name actions-backend-server ${{env.REPO_NAME}}:latest
